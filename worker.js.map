{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker.js","webpack:///./node_modules/@cosmic-plus/domutils/es5/service-worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ServiceWorker","require","pkg","version","fromCache","precache","register","verbose","this","hostname","location","host","replace","enabled","root","concat","protocol","startByRoot","RegExp","timeout","cacheName","files","message","console","log","keys","self","addEventListener","event","waitUntil","worker","urls","map","f","caches","open","then","cache","addAll","skipWaiting","Promise","all","delete","request","method","url","match","filename","tag","Request","config","strategy","respondWith","fromNetwork","resolve","reject","timeoutId","setTimeout","fetch","response","clearTimeout","cacheOrNetwork","async","cached","cacheCopy","clone","put","cacheResponse","array","forEach"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\"\n\nconst ServiceWorker = require(\"@cosmic-plus/domutils/es5/service-worker\")\nconst pkg = require(\"../package.json\")\n\nnew ServiceWorker(pkg.name, pkg.version, \"verbose\")\n  .fromCache([\n    // Application\n    \"/\",\n    \"index.css\",\n    \"index.html\",\n    \"index.js\",\n    \"stellar-sdk.js\",\n\n    // Vendor configuration\n    \"browserconfig.xml\",\n    \"manifest.json\",\n\n    // Icons\n    \"favicon.ico\",\n    \"icons/16x16.png\",\n    \"icons/32x32.png\",\n    \"icons/192x192.png\",\n    \"icons/512x512.png\",\n    \"icons/apple-touch.png\",\n    \"icons/mstile.png\",\n    \"icons/safari.svg\"\n  ])\n  .precache()\n  .register()\n","/**\n * A configurable service worker.\n */\nconst TIMEOUT = 2000;\nconst ServiceWorker = module.exports = class ServiceWorker {\n  /**\n   * Create a new ServiceWorker.\n   *\n   * @param  {String} package Package name\n   * @param  {String} version Package version\n   * @param  {*} verbose ServiceWorker will be verbose if this parameter is set\n   */\n  constructor(name, version, verbose) {\n    this.name = name;\n    this.version = version;\n    this.verbose = verbose;\n    this.hostname = location.host.replace(/:.*/, \"\");\n    this.enabled = this.hostname !== \"localhost\" && this.hostname !== \"127.0.0.1\";\n    this.root = \"\".concat(location.protocol, \"//\").concat(location.host, \"/\");\n    this.startByRoot = new RegExp(\"^\" + this.root);\n    this.timeout = TIMEOUT;\n    this.cacheName = \"\".concat(name, \"-\").concat(version);\n    this.files = {};\n    this.get = [];\n  }\n  /**\n   * Loads ServiceWorker in development environment.\n   */\n\n\n  development() {\n    this.enabled = true;\n    return this;\n  }\n  /**\n   * Log **message** if ServiceWorker is verbose.\n   */\n\n\n  log(message) {\n    // eslint-disable-next-line no-console\n    if (this.verbose) console.log(message);\n  }\n  /**\n   * Set all previously defined files to be pre-cached when ServiceWorker\n   * install itself.\n   */\n\n\n  precache() {\n    this.get = Object.keys(this.files);\n    return this;\n  }\n  /**\n   * Register ServiceWorker.\n   */\n\n\n  register() {\n    self.addEventListener(\"install\", event => {\n      this.log(\"Installing \".concat(this.cacheName, \"...\"));\n      event.waitUntil(precache(this, this.get).then(() => self.skipWaiting()).then(() => this.log(\"\".concat(this.cacheName, \" installed\"))));\n    });\n    self.addEventListener(\"activate\", event => {\n      event.waitUntil(wipeCachesExcept(this.cacheName));\n    });\n    self.addEventListener(\"fetch\", event => {\n      if (!this.enabled || event.request.method !== \"GET\") return;\n      if (!event.request.url.match(this.startByRoot)) return; // Replace query & hash.\n\n      let url = event.request.url.replace(/(\\?|#).*$/, \"\");\n      let filename = url.replace(this.startByRoot, \"\"); // Cosmic.link fix - TODO: implement generic rewrite.\n\n      if (!filename) {\n        filename = \"index.html\";\n        url += \"index.html\";\n      } // Tag URL to bypass browser cache.\n\n\n      const tag = \"?version=\".concat(this.version);\n      const request = new Request(\"\".concat(url).concat(tag));\n      const config = this.files[filename];\n\n      if (config && strategy[config]) {\n        event.respondWith(strategy[config](this, request, filename));\n      } else {\n        event.respondWith(strategy.fromNetwork(this, request, filename));\n      }\n    });\n  }\n\n};\n/**\n * Cache **files** into `worker.cacheName`.\n */\n\nfunction precache(worker, files) {\n  // Tag URL to bypass browser cache.\n  const urls = files.map(f => \"\".concat(f, \"?version=\").concat(worker.version));\n  return caches.open(worker.cacheName).then(cache => cache.addAll(urls));\n}\n/**\n * Wipe every caches except **cacheName**.\n */\n\n\nfunction wipeCachesExcept(cacheName) {\n  return caches.keys().then(function (keys) {\n    return Promise.all(keys.map(key => {\n      if (key !== cacheName) caches.delete(key);\n    }));\n  });\n}\n/*******************************************************************************\n * Strategies\n */\n\n\nconst strategy = {};\n/**\n * Fetch **request** from cache or reject.\n */\n\nstrategy.fromCache = function (worker, request, filename) {\n  worker.log(\"Looking for \".concat(filename, \" into \").concat(worker.cacheName, \" cache...\"));\n  return caches.open(worker.cacheName).then(cache => cache.match(request));\n};\n/**\n * Fetch **request** from network or reject after **timeout**.\n */\n\n\nstrategy.fromNetwork = function (worker, request, filename) {\n  worker.log(\"Downloading \".concat(filename, \"...\"));\n  return new Promise(function (resolve, reject) {\n    const timeoutId = setTimeout(reject, worker.timeout);\n    return fetch(request).then(function (response) {\n      clearTimeout(timeoutId);\n      resolve(response);\n    });\n  });\n};\n/**\n * Resolve **request** using cache, or download and cache.\n */\n\n\nstrategy.cacheOrNetwork = async function (worker, request, filename) {\n  const cached = await strategy.fromCache(worker, request, filename);\n  if (cached) return cached;\n  const response = await strategy.fromNetwork(worker, request, filename);\n  cacheResponse(worker, request, response);\n  return response;\n};\n/**\n * Cache **response** to **request** into **worker** cache.\n */\n\n\nfunction cacheResponse(worker, request, response) {\n  const cacheCopy = response.clone();\n  caches.open(worker.cacheName).then(cache => cache.put(request, cacheCopy));\n}\n/*******************************************************************************\n * Merge strategies into ServiceWorker.\n */\n\n\nfor (let key in strategy) {\n  ServiceWorker.prototype[key] = function (array) {\n    array.forEach(filename => this.files[filename] = key);\n    return this;\n  };\n}"],"sourceRoot":""}